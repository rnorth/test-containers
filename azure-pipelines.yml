jobs:
- job: core
  steps:
  - task: Gradle@2
    displayName: Build & test
    env:
      AWS_ACCESS_KEY_ID: $(aws.accessKeyId)
      AWS_SECRET_ACCESS_KEY: $(aws.secretAccessKey)
    inputs:
        gradleWrapperFile: 'gradlew'
        jdkVersionOption: '1.11'
        options: '--no-daemon --continue'
        tasks: 'testcontainers:check'
        publishJUnitResults: true
        testResultsFiles: '**/TEST-*.xml'
- job: jdbc
  steps:
  - task: Gradle@2
    displayName: Build & test
    env:
      AWS_ACCESS_KEY_ID: $(aws.accessKeyId)
      AWS_SECRET_ACCESS_KEY: $(aws.secretAccessKey)
    inputs:
        gradleWrapperFile: 'gradlew'
        jdkVersionOption: '1.11'
        options: '--no-daemon --continue'
        tasks: 'jdbc-test:check'
        publishJUnitResults: true
        testResultsFiles: '**/TEST-*.xml'
- job: modules
  steps:
  - task: Gradle@2
    displayName: Build & test
    env:
      AWS_ACCESS_KEY_ID: $(aws.accessKeyId)
      AWS_SECRET_ACCESS_KEY: $(aws.secretAccessKey)
    inputs:
        gradleWrapperFile: 'gradlew'
        jdkVersionOption: '1.11'
        options: '--continue -x testcontainers:check -x jdbc-test:check -PpostCheckCommand="docker image prune -af"'
        tasks: 'check'
        publishJUnitResults: true
        testResultsFiles: '**/TEST-*.xml'
