buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        // https://github.com/melix/japicmp-gradle-plugin/issues/36
        classpath 'com.google.guava:guava:30.1.1-jre'
    }
}

plugins {
    id 'me.champeau.gradle.japicmp' version '0.2.9'
}

apply plugin: 'com.github.johnrengelman.shadow'

description = "Testcontainers Core"

sourceSets {
    jarFileTest
}

idea.module.testSourceDirs += sourceSets.jarFileTest.allSource.srcDirs

configurations {
    baseline
    shaded
    [api, compileOnly, testCompile]*.extendsFrom shaded
}

shadowJar {
    configurations = [project.configurations.shaded]

    mergeServiceFiles()

    [
        'META-INF/NOTICE',
        'META-INF/NOTICE.txt',
        'META-INF/LICENSE',
        'META-INF/LICENSE.txt',
        'META-INF/maven/',
        'META-INF/proguard/',
        'META-INF/versions/*/module-info.class',
        'META-INF/services/java.security.Provider',
    ].each { exclude(it) }
}

task jarFileTest(type: Test) {
    testClassesDirs = sourceSets.jarFileTest.output.classesDirs
    classpath = sourceSets.jarFileTest.runtimeClasspath

    systemProperty("jarFile", shadowJar.outputs.files.singleFile)

    dependsOn(shadowJar)
}
project.tasks.check.dependsOn(jarFileTest)

task japicmp(type: me.champeau.gradle.japicmp.JapicmpTask) {
    dependsOn(tasks.shadowJar)

    oldClasspath = configurations.baseline
    newClasspath = shadowJar.outputs.files
    ignoreMissingClasses = true

    accessModifier = "protected"
    failOnModification = true
    failOnSourceIncompatibility = true

    packageExcludes = [
        "com.github.dockerjava.*",
        "org.testcontainers.shaded.*",
    ]

    classExcludes = []

    methodExcludes = []

    fieldExcludes = []

    onlyBinaryIncompatibleModified = true
    htmlOutputFile = file("$buildDir/reports/japi.html")
}
// do not run on Windows by default
// TODO investigate zip issue on Windows
if (!org.gradle.internal.os.OperatingSystem.current().isWindows()) {
    project.tasks.check.dependsOn(japicmp)
}

configurations.all {
    resolutionStrategy {
        // use lower Jackson version
        force 'com.fasterxml.jackson.core:jackson-databind:2.8.8'
    }
}

dependencies {
    baseline 'org.testcontainers:testcontainers:1.15.3', {
        exclude group: "*", module: "*"
    }

    api 'junit:junit:4.12'
    api 'org.slf4j:slf4j-api:1.7.30'
    compileOnly 'org.jetbrains:annotations:21.0.1'
    testCompileClasspath 'org.jetbrains:annotations:21.0.1'
    api 'org.apache.commons:commons-compress:1.20'
    api ('org.rnorth.duct-tape:duct-tape:1.0.8') {
        exclude(group: 'org.jetbrains', module: 'annotations')
    }

    api "com.github.docker-java:docker-java-api:3.2.8"

    shaded ('com.github.docker-java:docker-java-core:3.2.8') {
        exclude(group: 'com.github.docker-java', module: 'docker-java-api')
        exclude(group: 'com.github.docker-java', module: 'docker-java-transport')
        exclude(group: 'com.fasterxml.jackson.core', module: 'jackson-annotations')
        exclude(group: 'com.google.code.findbug')
        exclude(group: 'org.slf4j')
        exclude(group: 'org.apache.commons', module: 'commons-compress')
    }

    shaded ('com.github.docker-java:docker-java-transport-okhttp:3.2.8') {
        exclude(group: 'com.github.docker-java', module: 'docker-java-core')
        exclude(group: 'net.java.dev.jna')
        exclude(group: 'org.slf4j')
    }

    api 'com.github.docker-java:docker-java-transport-zerodep:3.2.8'

    shaded "org.yaml:snakeyaml:1.29"

    shaded 'org.glassfish.main.external:trilead-ssh2-repackaged:4.1.2'

    shaded 'org.zeroturnaround:zt-exec:1.12', {
        exclude(group: 'org.slf4j')
    }

    testImplementation 'org.apache.httpcomponents:httpclient:4.5.9'
    testImplementation 'redis.clients:jedis:3.6.0'
    testImplementation 'com.rabbitmq:amqp-client:5.12.0'
    testImplementation 'org.mongodb:mongo-java-driver:3.12.7'

    testImplementation ('org.mockito:mockito-core:3.10.0') {
        exclude(module: 'hamcrest-core')
    }
    // Synthetic JAR used for MountableFileTest and DirectoryTarResourceTest
    testImplementation files('testlib/repo/fakejar/fakejar/0/fakejar-0.jar')

    testImplementation 'org.rnorth.visible-assertions:visible-assertions:2.1.2'
    testImplementation 'org.assertj:assertj-core:3.18.1'
    testImplementation project(':test-support')

    jarFileTestCompileOnly "org.projectlombok:lombok:${lombok.version}"
    jarFileTestAnnotationProcessor "org.projectlombok:lombok:${lombok.version}"
    jarFileTestImplementation 'junit:junit:4.12'
    jarFileTestImplementation 'org.assertj:assertj-core:3.18.1'
    jarFileTestImplementation 'org.ow2.asm:asm-debug-all:5.2'
}

tasks.generatePomFileForMavenJavaPublication.finalizedBy(
    tasks.register('checkPOMdependencies', org.testcontainers.build.ComparePOMWithLatestReleasedTask) {
        ignore = [
        ]
    }
)
