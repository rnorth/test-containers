buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "gradle.plugin.ch.myniva.gradle:s3-build-cache:0.9.0"
    }

    configurations.classpath {
        resolutionStrategy {
            force 'com.amazonaws:aws-java-sdk-s3:1.11.582'
        }
    }
}

apply plugin: 'ch.myniva.s3-build-cache'

ext.isMasterBuild = (System.getenv("CIRCLE_BRANCH") ?: System.getenv("BUILD_SOURCEBRANCHNAME")) == "master"

buildCache {
    local {
        enabled = !isMasterBuild
    }

    remote(ch.myniva.gradle.caching.s3.AwsS3BuildCache) {
        endpoint = 'fra1.digitaloceanspaces.com'
        region = 'fra1'
        bucket = 'testcontainers'
        path = 'cache'
        push = isMasterBuild
        headers = [
            'x-amz-acl': 'public-read'
        ]
    }
}

rootProject.name = 'testcontainers-java'

include "bom"

include "testcontainers"
project(':testcontainers').projectDir = "$rootDir/core" as File

file('modules').eachDir { dir ->
    include dir.name
    project(":${dir.name}").projectDir = dir
}

include ':docs:examples:junit4:generic'
include ':docs:examples:junit4:redis'
include ':docs:examples:junit5:redis'
include ':docs:examples:spock:redis'

include 'test-support'

